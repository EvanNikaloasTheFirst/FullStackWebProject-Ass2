<?phpnamespace jobs\Controllers;class Admin{    private $Admin;    private $staffTable;    private $userTable;    public function __construct($Admin,$userTable)    {//        $this->get = $get;//        $this->post = $post;        $this->Admin = $Admin;        $this ->userTable = $userTable;    }//    displays all of the staff accounts    public function staffList(){        $this->isAdminLogged();        $staff = $this->staffTable->findAll();        return ['templates' => 'StaffList.html.php',            'title' => 'All staff member',            'variables' => [                'staff' => $staff            ]        ];    }    public function deleteStaff() {        $this->isAdminLogged();        $this->staffTable->delete($_GET['id']);        header('location: /Admin/staffList');    }//allows admin to grant and remove access from a staff user    public function grantAccess()    {        $this->isAdminLogged();        $table = 'user';        $column = 'Admin';        $this->staffTable->grantAccess($_GET['id']);        header('location: /Admin/stafflist');    }    public function removeAccess(){        $this->isAdminLogged();        $this->staffTable->removeAccess($_GET['id']);        header('location: /Admin/stafflist');    }//    allows admin to add a regular user to the system    public function register(){        $success = '';        $this->isAdminLogged();        return ['templates' => 'addUser.html.php',            'title' => 'All user',            'variables' => [ 'success'=> $success            ]        ];    }    public function registerSubmit(){        $errors = [];        $user = ['firstname' => $_POST['firstname'],            'surname'=> $_POST['surname'],            'password' =>$_POST['password'],            'username' => $_POST['username'],            'Admin' => $_POST['Admin'],            'Staff' => $_POST['Staff'],            'Client' => $_POST['Client']];// Error check to ensure there form has been filled in correctly        $errors += $this->testInvalidFirstAndLastname($user);        $errors += $this->testValidateRegister($user);        $errors += $this->testblankLastname($user);        $errors +=  $this->testblankFirstname($user);        if(count($errors)== 0) {            $success = $this->userTable->insert($user);            $response = 'Registration was successful';        } else {            $success = array_values($errors);            $response = 'Registration was not successful';        }        return ['templates' => 'addUser.html.php',            'title' => 'Add user',            'variables' => ['success' => $success, 'response' => $response]];    }    public function isAdminLogged(){        if (!$_SESSION['AdminLoggedIn']) {            header('location: /User/login');            exit();        }    }    public function testValidateRegister($user){        $errors = [];        if ($user['firstname'] == ''){            $errors[] = 'You must enter a firstname';        }        if ($user['surname'] == ''){            $errors[] = 'You must enter a surname';        }        if ($user['username'] == ''){            $errors[] = 'You must enter a username';        }        if ($user['password'] == ''){            $errors[] = 'You must enter a password';        }        if ($user['Admin'] == ''){            $errors[] = 'You must enter an N OR Y for the admin ';        }        if ($user['Staff'] == ''){            $errors[] = 'You must enter an N OR Y for the staff section';        }        if ($user['Client'] == ''){            $errors[] = 'You must enter an N OR Y for the client section';        }        return $errors;//        docker compose run -w /websites/as2-1 phpunit .    }    public function testInvalidFirstAndLastname($user){        $errors = [];        if ($user['firstname'] == ''){            $errors[] = 'You must enter a firstname';        }        if ($user['surname'] == ''){            $errors[] = 'You must enter a surname';        }        return $errors;    }    public function testblankFirstname($user){        $errors = [];        if ($user['firstname'] == ''){            $errors[] = 'You must enter a firstname';        }        return $errors;    }    public function testblankLastname($user){        $errors = [];        if ($user['surname'] == ''){            $errors[] = 'You must enter a surname';        }        return $errors;    }}