<?php//require 'as2/DatabaseTable.php';require 'jobs/Controllers/Job.php';class testJobsFormTest extends \PHPUnit\Framework\TestCase {    private $controller;    public function setUp(){        $pdo = new \PDO('mysql:host=mysql;dbname=job;charset=utf8', 'student', 'student');        $jobTable = new \as2\DatabaseTable($pdo, 'job', 'id');        $this->controller = new \jobs\Controllers\Job($jobTable);    }    public function testAddJobAllBlank(){        $invalidUser = [            'title' => '',            'Description' => '',            'Salary' => '',            'Location' => '',            'categoryId' => '',            'closingDate' => '',            'userId' => ''        ];        $errors = $this->controller->testAddJobAllBlank($invalidUser);        $this->assertEquals(count($errors),6);//        docker compose run -w /websites/as2-1 phpunit .    }    public function testAddJobBlankTitle(){        $invalidUser = [            'title' => '',            'Description' => 'xx',            'Salary' => 'xx',            'Location' => 'xx',            'categoryId' => '2',            'closingDate' => '05/23/2023',            'userId' => '1'        ];        $errors = $this->controller->testAddJobBlankTitle($invalidUser);        $this->assertEquals(count($errors),1);    }    public function testAddJobBlankDescription(){        $invalidUser = [            'title' => 'xx',            'Description' => '',            'Salary' => 'xx',            'Location' => 'xx',            'categoryId' => '2',            'closingDate' => '05/23/2023',            'userId' => '1'        ];        $errors = $this->controller->testAddJobBlankDescription($invalidUser);        $this->assertEquals(count($errors),1);    }    public function testAddJobBlankSalary(){        $invalidUser = [            'title' => 'xx',            'Description' => 'xx',            'Salary' => '',            'Location' => 'xx',            'categoryId' => '2',            'closingDate' => '05/23/2023',            'userId' => '1'        ];        $errors = $this->controller->testAddJobBlankSalary($invalidUser);        $this->assertEquals(count($errors),1);    }    public function testAddJobBlankLocation(){        $invalidUser = [            'title' => 'xx',            'Description' => 'xx',            'Salary' => 'xx',            'Location' => '',            'categoryId' => '2',            'closingDate' => '05/23/2023',            'userId' => '1'        ];        $errors = $this->controller->testAddJobBlankLocation($invalidUser);        $this->assertEquals(count($errors),1);    }    public function testAddJobBlankcategoryId(){        $invalidUser = [            'title' => 'xx',            'Description' => 'xx',            'Salary' => 'xx',            'Location' => '',            'categoryId' => '',            'closingDate' => '05/23/2023',            'userId' => '1'        ];        $errors = $this->controller->testAddJobBlankcategoryId($invalidUser);        $this->assertEquals(count($errors),1);    }    public function testAddJobInvalidClosingDate(){        $invalidUser = [            'title' => 'xx',            'Description' => 'xx',            'Salary' => 'xx',            'Location' => '',            'categoryId' => '',            'closingDate' => 'DD/MM/YYY',            'userId' => '1'        ];        $errors = $this->controller->testAddJobInvalidClosingDate($invalidUser);        $this->assertEquals(count($errors),1);    }    public function checkJobAdded(){        $this->pdo->query('DELETE FROM job WHERE name = "Trial"');        $stmt = $this->pdo->query('SELECT * FROM job WHERE name = "Trial"');        $record =$stmt->fetch();        $this->assertFalse($record);        $testPostData = [            'title' => 'Trial',            'Description' => null,            'Salary' => '£50,000',            'Location' => 'Mongolia',            'categoryId' => '2',            'closingDate' => '2024-10-10',            'userId' => '3'        ];        $databaseTable = new \jobs\DatabaseTable($this->pdo,'job','id');        $databaseTable->save($testPostData);//        $this->controller = new \jobs\Controllers\Job($this->pdo,[]. $testPostData);//        $this->controller->addJob();        $stmt = $this->pdo->query('SELECT * FROM job WHERE name = "Trial"');        $record =$stmt->fetch();        $this->assertEquals($record['title'],$testPostData['job']['title']);    }}?>