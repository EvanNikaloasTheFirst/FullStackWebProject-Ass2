<?php//namespace jobs\Controllers;require 'as2/DatabaseTable.php';//require 'jobs/Controllers/Job.php';require 'jobs/Controllers/User.php';class testRegisterSubmitTest extends \PHPUnit\Framework\TestCase{    private $controller;    public function setUp()    {        $pdo = new \PDO('mysql:host=mysql;dbname=job;charset=utf8', 'student', 'student');        $userTable = new \as2\DatabaseTable($pdo, 'user', 'id');        $this->controller = new \jobs\Controllers\User($userTable);    }    public function testValidateRegister()    {        $invalidUser = [            'firstname' => '',            'surname' => '',            'username' => '',            'password' => '',            'Admin' => '',            'Staff' => '',            'Client' => ''        ];        $errors = $this->controller->testValidateRegister($invalidUser);        $this->assertEquals(count($errors), 7);//        docker compose run -w /websites/as2-1 phpunit .    }    public function testInvalidFirstAndLastname()    {        $invalidUser = [            'firstname' => '',            'surname' => '',            'username' => '1234',            'password' => '1224',            'Admin' => 'N',            'Staff' => 'N',            'Client' => 'Y'        ];        $errors = $this->controller->testInvalidFirstAndLastname($invalidUser);        $this->assertEquals(count($errors), 2);    }    public function testblankFirstname()    {        $invalidUser = [            'firstname' => '',            'surname' => 'dd',            'username' => '1234',            'password' => '1224',            'Admin' => 'N',            'Staff' => 'N',            'Client' => 'Y'        ];        $errors = $this->controller->testblankFirstname($invalidUser);        $this->assertEquals(count($errors), 1);    }    public function testblankLastname()    {        $invalidUser = [            'firstname' => 'dd',            'surname' => '',            'username' => '1234',            'password' => '1224',            'Admin' => 'N',            'Staff' => 'N',            'Client' => 'Y'        ];        $errors = $this->controller->testblankLastname($invalidUser);        $this->assertEquals(count($errors), 1);    }}?>